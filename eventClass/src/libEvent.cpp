//
// File generated by rootcint at Wed Sep 20 11:05:45 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME libEvent
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "libEvent.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void EventHeader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EventHeader(void *p = 0);
   static void *newArray_EventHeader(Long_t size, void *p);
   static void delete_EventHeader(void *p);
   static void deleteArray_EventHeader(void *p);
   static void destruct_EventHeader(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EventHeader*)
   {
      ::EventHeader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EventHeader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EventHeader", ::EventHeader::Class_Version(), "./include/Event.h", 28,
                  typeid(::EventHeader), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EventHeader::Dictionary, isa_proxy, 4,
                  sizeof(::EventHeader) );
      instance.SetNew(&new_EventHeader);
      instance.SetNewArray(&newArray_EventHeader);
      instance.SetDelete(&delete_EventHeader);
      instance.SetDeleteArray(&deleteArray_EventHeader);
      instance.SetDestructor(&destruct_EventHeader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EventHeader*)
   {
      return GenerateInitInstanceLocal((::EventHeader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EventHeader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Event_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Event(void *p = 0);
   static void *newArray_Event(Long_t size, void *p);
   static void delete_Event(void *p);
   static void deleteArray_Event(void *p);
   static void destruct_Event(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Event*)
   {
      ::Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Event", ::Event::Class_Version(), "./include/Event.h", 46,
                  typeid(::Event), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Event::Dictionary, isa_proxy, 4,
                  sizeof(::Event) );
      instance.SetNew(&new_Event);
      instance.SetNewArray(&newArray_Event);
      instance.SetDelete(&delete_Event);
      instance.SetDeleteArray(&deleteArray_Event);
      instance.SetDestructor(&destruct_Event);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Event*)
   {
      return GenerateInitInstanceLocal((::Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr EventHeader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventHeader::Class_Name()
{
   return "EventHeader";
}

//______________________________________________________________________________
const char *EventHeader::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EventHeader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventHeader::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EventHeader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventHeader::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EventHeader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventHeader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EventHeader*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Event::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Event::Class_Name()
{
   return "Event";
}

//______________________________________________________________________________
const char *Event::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Event::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Event::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Event::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Event*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class Event.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Event::Class(),this);
   } else {
      R__b.WriteClassBuffer(Event::Class(),this);
   }
}

//______________________________________________________________________________
void Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Event.
      TClass *R__cl = ::Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventName", &fEventName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTypeID", &fTypeID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtrack", &fNtrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvtHdr", &fEvtHdr);
      R__insp.InspectMember(fEvtHdr, "fEvtHdr.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticle", &fParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastParticle", &fLastParticle);
      R__insp.InspectMember(fLastParticle, "fLastParticle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsValid", &fIsValid);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Event(void *p) {
      return  p ? new(p) ::Event : new ::Event;
   }
   static void *newArray_Event(Long_t nElements, void *p) {
      return p ? new(p) ::Event[nElements] : new ::Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_Event(void *p) {
      delete ((::Event*)p);
   }
   static void deleteArray_Event(void *p) {
      delete [] ((::Event*)p);
   }
   static void destruct_Event(void *p) {
      typedef ::Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Event

//______________________________________________________________________________
void EventHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class EventHeader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EventHeader::Class(),this);
   } else {
      R__b.WriteClassBuffer(EventHeader::Class(),this);
   }
}

//______________________________________________________________________________
void EventHeader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EventHeader.
      TClass *R__cl = ::EventHeader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRun", &fRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fA1Run", &fA1Run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fA2Run", &fA2Run);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EventHeader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EventHeader : new ::EventHeader;
   }
   static void *newArray_EventHeader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EventHeader[nElements] : new ::EventHeader[nElements];
   }
   // Wrapper around operator delete
   static void delete_EventHeader(void *p) {
      delete ((::EventHeader*)p);
   }
   static void deleteArray_EventHeader(void *p) {
      delete [] ((::EventHeader*)p);
   }
   static void destruct_EventHeader(void *p) {
      typedef ::EventHeader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::EventHeader

/********************************************************
* libEvent.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablelibEvent();

extern "C" void G__set_cpp_environmentlibEvent() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Event.h");
  G__cpp_reset_tagtablelibEvent();
}
#include <new>
extern "C" int G__cpp_dllrevlibEvent() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* EventHeader */
static int G__libEvent_670_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventHeader[n];
     } else {
       p = new((void*) gvp) EventHeader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventHeader;
     } else {
       p = new((void*) gvp) EventHeader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libEventLN_EventHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_670_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->Set((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_670_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EventHeader*) G__getstructoffset())->GetRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_670_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EventHeader*) G__getstructoffset())->GetA1Run());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_670_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EventHeader*) G__getstructoffset())->GetA2Run());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_670_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EventHeader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_670_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventHeader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_670_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EventHeader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_670_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EventHeader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_670_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EventHeader*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_670_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_670_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_670_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_670_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventHeader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_670_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventHeader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_670_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventHeader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_670_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventHeader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libEvent_670_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EventHeader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EventHeader(*(EventHeader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libEventLN_EventHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EventHeader G__TEventHeader;
static int G__libEvent_670_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EventHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EventHeader*) (soff+(sizeof(EventHeader)*i)))->~G__TEventHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EventHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EventHeader*) (soff))->~G__TEventHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libEvent_670_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventHeader* dest = (EventHeader*) G__getstructoffset();
   *dest = *(EventHeader*) libp->para[0].ref;
   const EventHeader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Event */
static int G__libEvent_671_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Event[n];
     } else {
       p = new((void*) gvp) Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Event;
     } else {
       p = new((void*) gvp) Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libEventLN_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((Event*) G__getstructoffset())->Build((int) G__int(libp->para[0]), (HepMC::GenEvent*) G__int(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((Event*) G__getstructoffset())->Build((int) G__int(libp->para[0]), (HepMC::GenEvent*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Event*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->SetTypeID((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->SetNtrack((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->SetHeader((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Event*) G__getstructoffset())->AddParticle((HepMC::GenParticle*) G__int(libp->para[0]), (HepMC::GenVertex*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((Event*) G__getstructoffset())->GetTypeID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Event*) G__getstructoffset())->GetNtrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Event*) G__getstructoffset())->GetHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Event*) G__getstructoffset())->GetParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Event*) G__getstructoffset())->GetLastParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libEvent_671_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libEvent_671_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Event* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Event(*(Event*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libEventLN_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Event G__TEvent;
static int G__libEvent_671_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Event*) (soff+(sizeof(Event)*i)))->~G__TEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Event*) (soff))->~G__TEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libEvent_671_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Event* dest = (Event*) G__getstructoffset();
   *dest = *(Event*) libp->para[0].ref;
   const Event& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* EventHeader */

/* Event */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunclibEvent {
 public:
  G__Sizep2memfunclibEvent(): p(&G__Sizep2memfunclibEvent::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunclibEvent::*p)();
};

size_t G__get_sizep2memfunclibEvent()
{
  G__Sizep2memfunclibEvent a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancelibEvent() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libEventLN_Event))) {
     Event *G__Lderived;
     G__Lderived=(Event*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libEventLN_Event),G__get_linked_tagnum(&G__libEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablelibEvent() {

   /* Setting up typedef entry */
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__libEventLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libEventLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libEventLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libEventLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libEventLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__libEventLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libEventLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libEventLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libEventLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libEventLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__libEventLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__libEventLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__libEventLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__libEventLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__libEventLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__libEventLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__libEventLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,size_type>",117,G__get_linked_tagnum(&G__libEventLN_maplEstringcOunsignedsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,size_type>",117,G__get_linked_tagnum(&G__libEventLN_maplEstringcOunsignedsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,unsigned long>",117,G__get_linked_tagnum(&G__libEventLN_maplEstringcOunsignedsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,unsigned long,less<string> >",117,G__get_linked_tagnum(&G__libEventLN_maplEstringcOunsignedsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HepMC::GenParticle*>",117,G__get_linked_tagnum(&G__libEventLN_vectorlEHepMCcLcLGenParticlemUcOallocatorlEHepMCcLcLGenParticlemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libEventLN_reverse_iteratorlEvectorlEHepMCcLcLGenParticlemUcOallocatorlEHepMCcLcLGenParticlemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libEventLN_vectorlEHepMCcLcLGenParticlemUcOallocatorlEHepMCcLcLGenParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libEventLN_reverse_iteratorlEvectorlEHepMCcLcLGenParticlemUcOallocatorlEHepMCcLcLGenParticlemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libEventLN_vectorlEHepMCcLcLGenParticlemUcOallocatorlEHepMCcLcLGenParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::forward_iterator_tag,HepMC::GenParticle*,ptrdiff_t>",117,G__get_linked_tagnum(&G__libEventLN_iteratorlEforward_iterator_tagcOHepMCcLcLGenParticlemUcOlongcOHepMCcLcLGenParticlemUmUcOHepMCcLcLGenParticlemUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<forward_iterator_tag,HepMC::GenParticle*,ptrdiff_t>",117,G__get_linked_tagnum(&G__libEventLN_iteratorlEforward_iterator_tagcOHepMCcLcLGenParticlemUcOlongcOHepMCcLcLGenParticlemUmUcOHepMCcLcLGenParticlemUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<forward_iterator_tag,HepMC::GenParticle*>",117,G__get_linked_tagnum(&G__libEventLN_iteratorlEforward_iterator_tagcOHepMCcLcLGenParticlemUcOlongcOHepMCcLcLGenParticlemUmUcOHepMCcLcLGenParticlemUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<forward_iterator_tag,HepMC::GenParticle*,long>",117,G__get_linked_tagnum(&G__libEventLN_iteratorlEforward_iterator_tagcOHepMCcLcLGenParticlemUcOlongcOHepMCcLcLGenParticlemUmUcOHepMCcLcLGenParticlemUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<forward_iterator_tag,HepMC::GenParticle*,long,HepMC::GenParticle**>",117,G__get_linked_tagnum(&G__libEventLN_iteratorlEforward_iterator_tagcOHepMCcLcLGenParticlemUcOlongcOHepMCcLcLGenParticlemUmUcOHepMCcLcLGenParticlemUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::forward_iterator_tag,HepMC::GenVertex*,ptrdiff_t>",117,G__get_linked_tagnum(&G__libEventLN_iteratorlEforward_iterator_tagcOHepMCcLcLGenVertexmUcOlongcOHepMCcLcLGenVertexmUmUcOHepMCcLcLGenVertexmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<forward_iterator_tag,HepMC::GenVertex*,ptrdiff_t>",117,G__get_linked_tagnum(&G__libEventLN_iteratorlEforward_iterator_tagcOHepMCcLcLGenVertexmUcOlongcOHepMCcLcLGenVertexmUmUcOHepMCcLcLGenVertexmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<forward_iterator_tag,HepMC::GenVertex*>",117,G__get_linked_tagnum(&G__libEventLN_iteratorlEforward_iterator_tagcOHepMCcLcLGenVertexmUcOlongcOHepMCcLcLGenVertexmUmUcOHepMCcLcLGenVertexmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<forward_iterator_tag,HepMC::GenVertex*,long>",117,G__get_linked_tagnum(&G__libEventLN_iteratorlEforward_iterator_tagcOHepMCcLcLGenVertexmUcOlongcOHepMCcLcLGenVertexmUmUcOHepMCcLcLGenVertexmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<forward_iterator_tag,HepMC::GenVertex*,long,HepMC::GenVertex**>",117,G__get_linked_tagnum(&G__libEventLN_iteratorlEforward_iterator_tagcOHepMCcLcLGenVertexmUcOlongcOHepMCcLcLGenVertexmUmUcOHepMCcLcLGenVertexmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<const HepMC::GenVertex*>",117,G__get_linked_tagnum(&G__libEventLN_setlEconstsPHepMCcLcLGenVertexmUcOlesslEconstsPHepMCcLcLGenVertexmUgRcOallocatorlEconstsPHepMCcLcLGenVertexmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<const HepMC::GenVertex*,less<const HepMC::GenVertex*> >",117,G__get_linked_tagnum(&G__libEventLN_setlEconstsPHepMCcLcLGenVertexmUcOlesslEconstsPHepMCcLcLGenVertexmUgRcOallocatorlEconstsPHepMCcLcLGenVertexmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,HepMC::GenVertex*,std::greater<int> >",117,G__get_linked_tagnum(&G__libEventLN_maplEintcOHepMCcLcLGenVertexmUcOgreaterlEintgRcOallocatorlEpairlEconstsPintcOHepMCcLcLGenVertexmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,HepMC::GenVertex*>",117,G__get_linked_tagnum(&G__libEventLN_maplEintcOHepMCcLcLGenVertexmUcOgreaterlEintgRcOallocatorlEpairlEconstsPintcOHepMCcLcLGenVertexmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,HepMC::GenVertex*,greater<int> >",117,G__get_linked_tagnum(&G__libEventLN_maplEintcOHepMCcLcLGenVertexmUcOgreaterlEintgRcOallocatorlEpairlEconstsPintcOHepMCcLcLGenVertexmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,HepMC::GenParticle*>",117,G__get_linked_tagnum(&G__libEventLN_maplEintcOHepMCcLcLGenParticlemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHepMCcLcLGenParticlemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,HepMC::GenParticle*,less<int> >",117,G__get_linked_tagnum(&G__libEventLN_maplEintcOHepMCcLcLGenParticlemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHepMCcLcLGenParticlemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,HepMC::GenParticle*,std::less<int> >",117,G__get_linked_tagnum(&G__libEventLN_maplEintcOHepMCcLcLGenParticlemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHepMCcLcLGenParticlemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<HepMC::GenParticle*,int>",117,G__get_linked_tagnum(&G__libEventLN_maplEHepMCcLcLGenParticlemUcOintcOlesslEHepMCcLcLGenParticlemUgRcOallocatorlEpairlEHepMCcLcLGenParticlemUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<HepMC::GenParticle*,int,less<HepMC::GenParticle*> >",117,G__get_linked_tagnum(&G__libEventLN_maplEHepMCcLcLGenParticlemUcOintcOlesslEHepMCcLcLGenParticlemUgRcOallocatorlEpairlEHepMCcLcLGenParticlemUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* EventHeader */
static void G__setup_memvarEventHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libEventLN_EventHeader));
   { EventHeader *p; p=(EventHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fA1Run=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fA2Run=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Event */
static void G__setup_memvarEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libEventLN_Event));
   { Event *p; p=(Event*)0x1000; if (p) { }
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"fEventName=",0,"run+event number in character format");
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fTypeID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNtrack=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libEventLN_EventHeader),-1,-1,4,"fEvtHdr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libEventLN_TClonesArray),-1,-1,4,"fParticle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libEventLN_TRef),-1,-1,4,"fLastParticle=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsValid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarlibEvent() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncEventHeader(void) {
   /* EventHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libEventLN_EventHeader));
   G__memfunc_setup("EventHeader",1099,G__libEvent_670_0_1, 105, G__get_linked_tagnum(&G__libEventLN_EventHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__libEvent_670_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - run i - - 0 - a1run "
"i - - 0 - a2run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRun",597,G__libEvent_670_0_3, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA1Run",711,G__libEvent_670_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA2Run",712,G__libEvent_670_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libEvent_670_0_6, 85, G__get_linked_tagnum(&G__libEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EventHeader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libEvent_670_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventHeader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libEvent_670_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EventHeader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libEvent_670_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EventHeader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libEvent_670_0_10, 85, G__get_linked_tagnum(&G__libEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libEvent_670_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libEvent_670_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libEvent_670_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libEvent_670_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventHeader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libEvent_670_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventHeader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libEvent_670_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventHeader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libEvent_670_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventHeader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventHeader", 1099, G__libEvent_670_0_18, (int) ('i'), G__get_linked_tagnum(&G__libEventLN_EventHeader), -1, 0, 1, 1, 1, 0, "u 'EventHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventHeader", 1225, G__libEvent_670_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libEvent_670_0_20, (int) ('u'), G__get_linked_tagnum(&G__libEventLN_EventHeader), -1, 1, 1, 1, 1, 0, "u 'EventHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEvent(void) {
   /* Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libEventLN_Event));
   G__memfunc_setup("Event",514,G__libEvent_671_0_1, 105, G__get_linked_tagnum(&G__libEventLN_Event), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Build",496,G__libEvent_671_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - ev U 'HepMC::GenEvent' - 0 - evt "
"f - - 0 '1' ptmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__libEvent_671_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTypeID",859,G__libEvent_671_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNtrack",911,G__libEvent_671_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHeader",885,G__libEvent_671_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - run i - - 0 - a1run "
"i - - 0 - a2run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,G__libEvent_671_0_8, 85, G__get_linked_tagnum(&G__libEventLN_TParticle), -1, 0, 2, 1, 1, 0, 
"U 'HepMC::GenParticle' - 0 - p U 'HepMC::GenVertex' - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTypeID",847,G__libEvent_671_0_9, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNtrack",899,G__libEvent_671_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHeader",873,G__libEvent_671_0_11, 85, G__get_linked_tagnum(&G__libEventLN_EventHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__libEvent_671_0_12, 85, G__get_linked_tagnum(&G__libEventLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastParticle",1512,G__libEvent_671_0_13, 85, G__get_linked_tagnum(&G__libEventLN_TParticle), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libEvent_671_0_14, 85, G__get_linked_tagnum(&G__libEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libEvent_671_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libEvent_671_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libEvent_671_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libEvent_671_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libEvent_671_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libEvent_671_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libEvent_671_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libEvent_671_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Event::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Event", 514, G__libEvent_671_0_26, (int) ('i'), G__get_linked_tagnum(&G__libEventLN_Event), -1, 0, 1, 1, 1, 0, "u 'Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Event", 640, G__libEvent_671_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libEvent_671_0_28, (int) ('u'), G__get_linked_tagnum(&G__libEventLN_Event), -1, 1, 1, 1, 1, 0, "u 'Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunclibEvent() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globallibEvent() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funclibEvent() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__libEventLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__libEventLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__libEventLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__libEventLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__libEventLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__libEventLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__libEventLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libEventLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__libEventLN_TParticle = { "TParticle" , 99 , -1 };
G__linked_taginfo G__libEventLN_TRef = { "TRef" , 99 , -1 };
G__linked_taginfo G__libEventLN_HepMC = { "HepMC" , 110 , -1 };
G__linked_taginfo G__libEventLN_maplEstringcOunsignedsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPlonggRsPgRsPgR = { "map<string,unsigned long,less<string>,allocator<pair<const string,unsigned long> > >" , 99 , -1 };
G__linked_taginfo G__libEventLN_HepMCcLcLGenParticle = { "HepMC::GenParticle" , 99 , -1 };
G__linked_taginfo G__libEventLN_HepMCcLcLGenEvent = { "HepMC::GenEvent" , 99 , -1 };
G__linked_taginfo G__libEventLN_HepMCcLcLGenVertex = { "HepMC::GenVertex" , 99 , -1 };
G__linked_taginfo G__libEventLN_vectorlEHepMCcLcLGenParticlemUcOallocatorlEHepMCcLcLGenParticlemUgRsPgR = { "vector<HepMC::GenParticle*,allocator<HepMC::GenParticle*> >" , 99 , -1 };
G__linked_taginfo G__libEventLN_reverse_iteratorlEvectorlEHepMCcLcLGenParticlemUcOallocatorlEHepMCcLcLGenParticlemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HepMC::GenParticle*,allocator<HepMC::GenParticle*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libEventLN_iteratorlEforward_iterator_tagcOHepMCcLcLGenParticlemUcOlongcOHepMCcLcLGenParticlemUmUcOHepMCcLcLGenParticlemUaNgR = { "iterator<forward_iterator_tag,HepMC::GenParticle*,long,HepMC::GenParticle**,HepMC::GenParticle*&>" , 115 , -1 };
G__linked_taginfo G__libEventLN_iteratorlEforward_iterator_tagcOHepMCcLcLGenVertexmUcOlongcOHepMCcLcLGenVertexmUmUcOHepMCcLcLGenVertexmUaNgR = { "iterator<forward_iterator_tag,HepMC::GenVertex*,long,HepMC::GenVertex**,HepMC::GenVertex*&>" , 115 , -1 };
G__linked_taginfo G__libEventLN_setlEconstsPHepMCcLcLGenVertexmUcOlesslEconstsPHepMCcLcLGenVertexmUgRcOallocatorlEconstsPHepMCcLcLGenVertexmUgRsPgR = { "set<const HepMC::GenVertex*,less<const HepMC::GenVertex*>,allocator<const HepMC::GenVertex*> >" , 99 , -1 };
G__linked_taginfo G__libEventLN_maplEintcOHepMCcLcLGenVertexmUcOgreaterlEintgRcOallocatorlEpairlEconstsPintcOHepMCcLcLGenVertexmUgRsPgRsPgR = { "map<int,HepMC::GenVertex*,greater<int>,allocator<pair<const int,HepMC::GenVertex*> > >" , 99 , -1 };
G__linked_taginfo G__libEventLN_maplEintcOHepMCcLcLGenParticlemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHepMCcLcLGenParticlemUgRsPgRsPgR = { "map<int,HepMC::GenParticle*,less<int>,allocator<pair<const int,HepMC::GenParticle*> > >" , 99 , -1 };
G__linked_taginfo G__libEventLN_maplEHepMCcLcLGenParticlemUcOintcOlesslEHepMCcLcLGenParticlemUgRcOallocatorlEpairlEHepMCcLcLGenParticlemUsPconstcOintgRsPgRsPgR = { "map<HepMC::GenParticle*,int,less<HepMC::GenParticle*>,allocator<pair<HepMC::GenParticle* const,int> > >" , 99 , -1 };
G__linked_taginfo G__libEventLN_EventHeader = { "EventHeader" , 99 , -1 };
G__linked_taginfo G__libEventLN_Event = { "Event" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablelibEvent() {
  G__libEventLN_TClass.tagnum = -1 ;
  G__libEventLN_TBuffer.tagnum = -1 ;
  G__libEventLN_TMemberInspector.tagnum = -1 ;
  G__libEventLN_TObject.tagnum = -1 ;
  G__libEventLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__libEventLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libEventLN_TClonesArray.tagnum = -1 ;
  G__libEventLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__libEventLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libEventLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__libEventLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__libEventLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__libEventLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__libEventLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__libEventLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__libEventLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__libEventLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__libEventLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__libEventLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__libEventLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__libEventLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__libEventLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__libEventLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__libEventLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__libEventLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__libEventLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__libEventLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__libEventLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__libEventLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__libEventLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__libEventLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__libEventLN_TParticle.tagnum = -1 ;
  G__libEventLN_TRef.tagnum = -1 ;
  G__libEventLN_HepMC.tagnum = -1 ;
  G__libEventLN_maplEstringcOunsignedsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPlonggRsPgRsPgR.tagnum = -1 ;
  G__libEventLN_HepMCcLcLGenParticle.tagnum = -1 ;
  G__libEventLN_HepMCcLcLGenEvent.tagnum = -1 ;
  G__libEventLN_HepMCcLcLGenVertex.tagnum = -1 ;
  G__libEventLN_vectorlEHepMCcLcLGenParticlemUcOallocatorlEHepMCcLcLGenParticlemUgRsPgR.tagnum = -1 ;
  G__libEventLN_reverse_iteratorlEvectorlEHepMCcLcLGenParticlemUcOallocatorlEHepMCcLcLGenParticlemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libEventLN_iteratorlEforward_iterator_tagcOHepMCcLcLGenParticlemUcOlongcOHepMCcLcLGenParticlemUmUcOHepMCcLcLGenParticlemUaNgR.tagnum = -1 ;
  G__libEventLN_iteratorlEforward_iterator_tagcOHepMCcLcLGenVertexmUcOlongcOHepMCcLcLGenVertexmUmUcOHepMCcLcLGenVertexmUaNgR.tagnum = -1 ;
  G__libEventLN_setlEconstsPHepMCcLcLGenVertexmUcOlesslEconstsPHepMCcLcLGenVertexmUgRcOallocatorlEconstsPHepMCcLcLGenVertexmUgRsPgR.tagnum = -1 ;
  G__libEventLN_maplEintcOHepMCcLcLGenVertexmUcOgreaterlEintgRcOallocatorlEpairlEconstsPintcOHepMCcLcLGenVertexmUgRsPgRsPgR.tagnum = -1 ;
  G__libEventLN_maplEintcOHepMCcLcLGenParticlemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHepMCcLcLGenParticlemUgRsPgRsPgR.tagnum = -1 ;
  G__libEventLN_maplEHepMCcLcLGenParticlemUcOintcOlesslEHepMCcLcLGenParticlemUgRcOallocatorlEpairlEHepMCcLcLGenParticlemUsPconstcOintgRsPgRsPgR.tagnum = -1 ;
  G__libEventLN_EventHeader.tagnum = -1 ;
  G__libEventLN_Event.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablelibEvent() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__libEventLN_TClass);
   G__get_linked_tagnum_fwd(&G__libEventLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__libEventLN_TObject);
   G__get_linked_tagnum_fwd(&G__libEventLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__libEventLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_TParticle);
   G__get_linked_tagnum_fwd(&G__libEventLN_TRef);
   G__get_linked_tagnum_fwd(&G__libEventLN_HepMC);
   G__get_linked_tagnum_fwd(&G__libEventLN_maplEstringcOunsignedsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPlonggRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_HepMCcLcLGenParticle);
   G__get_linked_tagnum_fwd(&G__libEventLN_HepMCcLcLGenEvent);
   G__get_linked_tagnum_fwd(&G__libEventLN_HepMCcLcLGenVertex);
   G__get_linked_tagnum_fwd(&G__libEventLN_vectorlEHepMCcLcLGenParticlemUcOallocatorlEHepMCcLcLGenParticlemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_reverse_iteratorlEvectorlEHepMCcLcLGenParticlemUcOallocatorlEHepMCcLcLGenParticlemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_iteratorlEforward_iterator_tagcOHepMCcLcLGenParticlemUcOlongcOHepMCcLcLGenParticlemUmUcOHepMCcLcLGenParticlemUaNgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_iteratorlEforward_iterator_tagcOHepMCcLcLGenVertexmUcOlongcOHepMCcLcLGenVertexmUmUcOHepMCcLcLGenVertexmUaNgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_setlEconstsPHepMCcLcLGenVertexmUcOlesslEconstsPHepMCcLcLGenVertexmUgRcOallocatorlEconstsPHepMCcLcLGenVertexmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_maplEintcOHepMCcLcLGenVertexmUcOgreaterlEintgRcOallocatorlEpairlEconstsPintcOHepMCcLcLGenVertexmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_maplEintcOHepMCcLcLGenParticlemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHepMCcLcLGenParticlemUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__libEventLN_maplEHepMCcLcLGenParticlemUcOintcOlesslEHepMCcLcLGenParticlemUgRcOallocatorlEpairlEHepMCcLcLGenParticlemUsPconstcOintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libEventLN_EventHeader),sizeof(EventHeader),-1,263424,(char*)NULL,G__setup_memvarEventHeader,G__setup_memfuncEventHeader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libEventLN_Event),sizeof(Event),-1,292096,(char*)NULL,G__setup_memvarEvent,G__setup_memfuncEvent);
}
extern "C" void G__cpp_setuplibEvent(void) {
  G__check_setup_version(30051515,"G__cpp_setuplibEvent()");
  G__set_cpp_environmentlibEvent();
  G__cpp_setup_tagtablelibEvent();

  G__cpp_setup_inheritancelibEvent();

  G__cpp_setup_typetablelibEvent();

  G__cpp_setup_memvarlibEvent();

  G__cpp_setup_memfunclibEvent();
  G__cpp_setup_globallibEvent();
  G__cpp_setup_funclibEvent();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunclibEvent();
  return;
}
class G__cpp_setup_initlibEvent {
  public:
    G__cpp_setup_initlibEvent() { G__add_setup_func("libEvent",(G__incsetup)(&G__cpp_setuplibEvent)); G__call_setup_funcs(); }
   ~G__cpp_setup_initlibEvent() { G__remove_setup_func("libEvent"); }
};
G__cpp_setup_initlibEvent G__cpp_setup_initializerlibEvent;

